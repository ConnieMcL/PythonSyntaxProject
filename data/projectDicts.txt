astropy
{"Index": 14136, "Slice": 2159, "Raise": 1509, "For": 1879, "UnaryOp": 1852, "Exec": 5, "Invert": 26, "DictComp": 11, "Param": 14641, "BitXor": 5, "Add": 2856, "NotIn": 433, "Call": 56917, "comprehension": 839, "IsNot": 908, "Ellipsis": 90, "Print": 126, "Import": 1427, "Subscript": 15410, "BitOr": 95, "TryExcept": 705, "Store": 40101, "Sub": 1521, "Break": 135, "Return": 4604, "Eq": 9290, "Assert": 11499, "Tuple": 8632, "Or": 478, "ExceptHandler": 728, "BitAnd": 47, "FloorDiv": 91, "arguments": 9155, "TryFinally": 59, "Not": 1480, "UAdd": 36, "Delete": 368, "With": 2206, "Mult": 6927, "ImportFrom": 2856, "Set": 14, "And": 1042, "AugAssign": 508, "Name": 209014, "BinOp": 14162, "Expr": 14686, "SetComp": 9, "Pass": 279, "List": 11131, "ClassDef": 1198, "Yield": 86, "Pow": 899, "While": 126, "Continue": 213, "Del": 374, "Str": 44910, "USub": 310, "Div": 1960, "Assign": 32000, "FunctionDef": 8904, "Lambda": 251, "Load": 269881, "ExtSlice": 646, "Compare": 15469, "Gt": 463, "Mod": 255, "keyword": 14676, "NotEq": 625, "Attribute": 80810, "Is": 1742, "Global": 24, "Lt": 484, "Module": 689, "alias": 5546, "BoolOp": 1520, "Num": 50228, "LtE": 155, "In": 1335, "GtE": 150, "Dict": 1522, "IfExp": 198, "GeneratorExp": 259, "ListComp": 548, "LShift": 14, "If": 7763}
django
{"Index": 7865, "Slice": 677, "Raise": 1308, "For": 1983, "UnaryOp": 1486, "Exec": 5, "Invert": 70, "DictComp": 76, "Param": 27797, "Pass": 839, "BitXor": 6, "Add": 1715, "Dict": 6915, "comprehension": 1290, "IsNot": 455, "Print": 111, "Import": 1153, "Subscript": 8541, "BitOr": 185, "TryExcept": 899, "Store": 52258, "Sub": 369, "ExceptHandler": 927, "Return": 7538, "GtE": 129, "Assert": 78, "Tuple": 12724, "arguments": 20225, "Or": 581, "Break": 90, "BitAnd": 92, "FloorDiv": 31, "ImportFrom": 6964, "TryFinally": 173, "GeneratorExp": 390, "Not": 1384, "UAdd": 1, "Set": 243, "With": 4194, "Delete": 187, "Mod": 3092, "And": 992, "NotIn": 242, "RShift": 1, "Name": 296065, "BinOp": 5671, "Expr": 44142, "SetComp": 76, "BoolOp": 1573, "List": 11284, "ClassDef": 7265, "Yield": 151, "Pow": 45, "While": 96, "Continue": 164, "Del": 188, "Str": 100301, "USub": 31, "Div": 75, "Assign": 43163, "FunctionDef": 19626, "Lambda": 599, "Load": 391413, "ExtSlice": 1, "Compare": 3957, "Gt": 187, "NotEq": 310, "keyword": 32412, "AugAssign": 334, "Attribute": 143042, "Is": 707, "Global": 17, "Lt": 144, "Module": 2442, "alias": 12833, "Num": 29454, "Mult": 385, "LtE": 47, "In": 535, "Call": 112899, "IfExp": 421, "Eq": 1228, "ListComp": 735, "LShift": 9, "If": 6577}
biopython
{"Index": 65574, "Slice": 2957, "Raise": 1745, "For": 3087, "UnaryOp": 1466, "Exec": 4, "Param": 13412, "Pass": 354, "Print": 23, "Lt": 448, "Call": 93436, "comprehension": 1112, "IsNot": 465, "AugAssign": 1405, "Import": 1002, "Subscript": 68486, "BitOr": 9, "TryExcept": 884, "Store": 39055, "Sub": 1193, "Assert": 1115, "Return": 5099, "GtE": 149, "Tuple": 25219, "BitXor": 17, "Or": 567, "ExceptHandler": 905, "BitAnd": 20, "FloorDiv": 144, "arguments": 8855, "TryFinally": 40, "GeneratorExp": 340, "Not": 1232, "UAdd": 153, "Lambda": 423, "With": 555, "IfExp": 60, "Mult": 1315, "ImportFrom": 2359, "And": 912, "NotIn": 382, "RShift": 26, "Name": 270593, "BinOp": 9033, "Expr": 60135, "BoolOp": 1479, "List": 6085, "ClassDef": 1199, "Yield": 237, "Set": 5, "While": 429, "Continue": 303, "Del": 380, "Str": 131005, "USub": 81, "Div": 494, "Pow": 27, "Assign": 28664, "FunctionDef": 8432, "Delete": 355, "Load": 478500, "ExtSlice": 42, "Compare": 8252, "Gt": 623, "keyword": 5925, "NotEq": 752, "Attribute": 160964, "Is": 527, "Global": 31, "Add": 4821, "Module": 580, "alias": 3924, "Num": 235512, "Break": 419, "LtE": 246, "In": 1399, "Dict": 2007, "Mod": 2361, "Eq": 3312, "ListComp": 752, "LShift": 11, "If": 8742}
exaile
{"Index": 1974, "Slice": 139, "Raise": 231, "For": 768, "UnaryOp": 592, "Exec": 1, "Invert": 3, "DictComp": 4, "Param": 8524, "Print": 34, "Add": 633, "Call": 18283, "comprehension": 230, "IsNot": 359, "AugAssign": 179, "Import": 656, "Subscript": 2113, "BitOr": 45, "TryExcept": 469, "Store": 11945, "Sub": 206, "Break": 71, "Return": 1984, "GtE": 28, "Assert": 255, "Tuple": 1726, "Or": 184, "ExceptHandler": 486, "BitAnd": 85, "FloorDiv": 14, "arguments": 4174, "TryFinally": 17, "GeneratorExp": 19, "Not": 582, "Lambda": 211, "With": 88, "Mult": 168, "ImportFrom": 1059, "And": 286, "NotIn": 86, "RShift": 1, "Name": 65958, "BinOp": 1629, "Expr": 9602, "SetComp": 4, "BoolOp": 470, "List": 1054, "ClassDef": 749, "Yield": 22, "Set": 7, "While": 43, "Continue": 84, "Del": 81, "Str": 13366, "USub": 7, "Div": 145, "Pow": 10, "Assign": 9632, "FunctionDef": 3963, "Delete": 79, "Load": 81755, "Compare": 2661, "Gt": 180, "Mod": 497, "keyword": 1413, "In": 240, "NotEq": 188, "Attribute": 31454, "Is": 373, "Global": 58, "Lt": 85, "Module": 263, "alias": 2179, "Num": 4193, "LtE": 28, "Pass": 242, "Dict": 377, "IfExp": 40, "Eq": 1108, "ListComp": 203, "LShift": 4, "If": 3694}
portage
{"Index": 6705, "Slice": 766, "Raise": 906, "For": 2838, "UnaryOp": 2331, "Exec": 1, "Invert": 2, "Param": 7871, "BitXor": 31, "Add": 3467, "NotIn": 695, "Dict": 3277, "comprehension": 616, "IsNot": 1181, "Print": 42, "Import": 1129, "Subscript": 7471, "BitOr": 69, "TryExcept": 1344, "Store": 27588, "Sub": 190, "Break": 363, "Return": 3598, "GtE": 215, "Assert": 32, "Tuple": 5404, "Or": 743, "ExceptHandler": 1441, "BitAnd": 78, "FloorDiv": 18, "arguments": 4064, "TryFinally": 344, "GeneratorExp": 329, "Not": 2308, "Lambda": 69, "With": 177, "IfExp": 35, "Mult": 99, "ImportFrom": 2413, "Set": 1, "And": 1581, "BoolOp": 2324, "RShift": 26, "Name": 133074, "BinOp": 5868, "Expr": 12565, "SetComp": 1, "AugAssign": 523, "List": 4036, "ClassDef": 772, "Yield": 160, "Pow": 21, "While": 172, "Continue": 1047, "Del": 345, "Str": 38621, "USub": 21, "Div": 14, "Assign": 20817, "FunctionDef": 3995, "Delete": 326, "Load": 160762, "Compare": 7898, "Gt": 301, "keyword": 8283, "In": 1510, "NotEq": 869, "Attribute": 46581, "Is": 1089, "Global": 40, "Lt": 242, "Module": 659, "alias": 4442, "Num": 8867, "LtE": 39, "Pass": 518, "Call": 32427, "Mod": 2353, "Eq": 1758, "ListComp": 284, "LShift": 25, "If": 10725}
neutron
{"Index": 22034, "Slice": 259, "Raise": 953, "For": 2186, "UnaryOp": 1622, "Invert": 14, "Param": 30550, "BitXor": 3, "Lt": 103, "Call": 80436, "comprehension": 1354, "IsNot": 220, "AugAssign": 359, "Import": 1595, "Subscript": 22293, "BitOr": 131, "TryExcept": 695, "Store": 52175, "Sub": 261, "Break": 80, "Return": 6089, "GtE": 34, "Assert": 71, "Tuple": 3973, "Or": 573, "ExceptHandler": 746, "BitAnd": 44, "FloorDiv": 6, "ImportFrom": 7327, "TryFinally": 28, "GeneratorExp": 216, "Not": 1597, "Lambda": 303, "With": 4584, "IfExp": 255, "DictComp": 89, "arguments": 17241, "And": 680, "NotIn": 313, "RShift": 6, "Name": 289572, "BinOp": 3224, "Expr": 32558, "SetComp": 95, "BoolOp": 1253, "List": 8991, "ClassDef": 2847, "Yield": 77, "Set": 114, "While": 55, "Continue": 215, "Del": 105, "Str": 76407, "USub": 11, "Div": 24, "Pow": 7, "Assign": 42382, "FunctionDef": 16938, "Delete": 105, "Load": 385413, "Compare": 3569, "Gt": 112, "keyword": 24538, "In": 744, "NotEq": 352, "Attribute": 143414, "Is": 276, "Global": 17, "Add": 1346, "Module": 1493, "alias": 8925, "Num": 11996, "Mult": 93, "LtE": 52, "Pass": 469, "Dict": 8696, "Mod": 1647, "Eq": 1388, "ListComp": 942, "LShift": 15, "If": 6257}
web2py
{"Index": 6314, "LShift": 85, "Slice": 943, "Raise": 800, "For": 1233, "UnaryOp": 1830, "Exec": 22, "Invert": 23, "DictComp": 6, "Param": 10265, "Repr": 1, "BitXor": 63, "Add": 2775, "NotIn": 295, "Call": 36737, "comprehension": 675, "IsNot": 303, "Print": 209, "Import": 1209, "Subscript": 7257, "BitOr": 94, "TryExcept": 893, "Store": 28211, "Sub": 512, "Break": 181, "Return": 4126, "GtE": 145, "Assert": 101, "Tuple": 4541, "AugAssign": 754, "Or": 1051, "ExceptHandler": 947, "BitAnd": 170, "Pow": 31, "ImportFrom": 1126, "TryFinally": 182, "GeneratorExp": 121, "Not": 1764, "UAdd": 2, "Delete": 139, "With": 135, "IfExp": 292, "Mult": 517, "arguments": 5201, "And": 1398, "BoolOp": 2449, "RShift": 46, "Name": 133325, "BinOp": 5769, "Expr": 12214, "Pass": 312, "List": 2071, "ClassDef": 747, "Yield": 41, "While": 189, "Continue": 169, "Del": 143, "Str": 156090, "USub": 41, "Div": 117, "Assign": 22763, "FunctionDef": 4853, "Lambda": 348, "Load": 152943, "Compare": 6004, "Gt": 367, "keyword": 8032, "NotEq": 438, "Attribute": 44368, "Is": 592, "Global": 36, "Lt": 262, "Module": 404, "alias": 3196, "Num": 76511, "LtE": 92, "In": 1201, "Dict": 12736, "Mod": 2063, "Eq": 2354, "ListComp": 543, "FloorDiv": 50, "If": 8852}
quodlibet
{"Index": 3540, "LShift": 19, "Slice": 376, "Raise": 581, "For": 1587, "UnaryOp": 1254, "Invert": 13, "DictComp": 6, "Param": 13880, "Pass": 401, "BitXor": 4, "Add": 1286, "NotIn": 227, "Dict": 1012, "comprehension": 515, "IsNot": 388, "Print": 67, "Import": 830, "Subscript": 3916, "BitOr": 149, "TryExcept": 1002, "Store": 23620, "Sub": 332, "Assert": 528, "Return": 4222, "GtE": 62, "Tuple": 3679, "SetComp": 22, "Or": 463, "ExceptHandler": 1032, "BitAnd": 68, "Pow": 33, "arguments": 8379, "TryFinally": 76, "GeneratorExp": 91, "Not": 1208, "UAdd": 4, "Lambda": 302, "With": 362, "IfExp": 136, "Mult": 355, "ImportFrom": 3799, "And": 603, "BoolOp": 1066, "RShift": 3, "Name": 134190, "BinOp": 3290, "Delete": 186, "Expr": 20076, "Global": 26, "AugAssign": 391, "List": 3046, "ClassDef": 1400, "Yield": 94, "Set": 97, "While": 141, "Continue": 218, "Del": 187, "Str": 28261, "USub": 29, "Div": 195, "Assign": 18423, "FunctionDef": 8077, "Break": 134, "Load": 161409, "Compare": 3971, "Gt": 164, "keyword": 2895, "NotEq": 252, "Attribute": 54265, "Is": 535, "Exec": 5, "Lt": 161, "Module": 635, "alias": 6469, "Num": 9599, "LtE": 57, "In": 780, "Call": 44160, "Mod": 1208, "Eq": 1362, "ListComp": 388, "FloorDiv": 29, "If": 5660}
buildbot
{"Index": 6002, "Slice": 244, "Raise": 642, "For": 1137, "UnaryOp": 1126, "DictComp": 1, "Param": 20798, "Pass": 539, "BitXor": 2, "Add": 4089, "NotIn": 245, "Call": 52848, "comprehension": 664, "IsNot": 630, "Import": 965, "Subscript": 6246, "BitOr": 25, "TryExcept": 486, "Store": 27082, "Sub": 158, "Assert": 320, "Return": 5995, "GtE": 55, "Tuple": 4568, "SetComp": 1, "Or": 335, "ExceptHandler": 513, "BitAnd": 36, "Pow": 4, "ImportFrom": 6458, "TryFinally": 31, "GeneratorExp": 57, "Not": 1119, "Lambda": 1027, "With": 406, "IfExp": 120, "Mult": 252, "arguments": 13667, "And": 544, "BoolOp": 879, "Name": 167710, "BinOp": 5518, "Delete": 126, "Expr": 21894, "Global": 14, "AugAssign": 391, "List": 7417, "ClassDef": 1957, "Yield": 3677, "Set": 1, "While": 115, "Continue": 146, "Del": 126, "Str": 54149, "USub": 7, "Div": 33, "Assign": 22735, "FunctionDef": 12640, "Break": 79, "Load": 217450, "Compare": 3742, "Gt": 137, "keyword": 23216, "NotEq": 350, "Attribute": 79515, "Is": 652, "Exec": 4, "Lt": 94, "Module": 762, "alias": 7457, "Num": 15063, "LtE": 47, "In": 508, "Dict": 3153, "Mod": 1296, "Eq": 1025, "ListComp": 605, "FloorDiv": 14, "If": 5562}
heat
{"Index": 11306, "Slice": 105, "Raise": 1243, "For": 1042, "UnaryOp": 973, "Exec": 1, "Invert": 2, "DictComp": 37, "Param": 19377, "Print": 24, "Add": 446, "Dict": 13455, "comprehension": 696, "IsNot": 592, "FloorDiv": 2, "AugAssign": 113, "Import": 1176, "Subscript": 11411, "BitOr": 9, "TryExcept": 705, "Store": 45841, "Sub": 199, "Break": 42, "Return": 4961, "GtE": 21, "Assert": 83, "Tuple": 5817, "BitXor": 10, "Or": 563, "ExceptHandler": 761, "BitAnd": 12, "Pow": 1, "ImportFrom": 4781, "TryFinally": 33, "GeneratorExp": 229, "Not": 965, "Delete": 172, "With": 357, "Mult": 74, "arguments": 11995, "And": 500, "NotIn": 226, "RShift": 1, "Name": 240319, "BinOp": 1969, "Expr": 29224, "SetComp": 6, "BoolOp": 1063, "List": 6150, "ClassDef": 1689, "Yield": 332, "Set": 48, "While": 68, "Continue": 90, "Del": 174, "Str": 83839, "USub": 6, "Div": 7, "Assign": 38759, "FunctionDef": 11837, "Lambda": 158, "Load": 337786, "Compare": 3547, "Gt": 112, "Mod": 1320, "keyword": 19772, "In": 614, "NotEq": 242, "Attribute": 139481, "Is": 638, "Global": 19, "Lt": 77, "Module": 861, "alias": 5966, "Num": 9248, "LtE": 16, "Pass": 232, "Call": 77353, "IfExp": 126, "Eq": 1015, "ListComp": 423, "LShift": 1, "If": 5129}
kivy
{"Index": 3947, "Slice": 500, "Raise": 296, "For": 878, "UnaryOp": 991, "Exec": 1, "Invert": 1, "Param": 7209, "Pass": 404, "Add": 1377, "NotIn": 277, "Call": 20384, "comprehension": 302, "IsNot": 366, "Print": 227, "Import": 440, "Subscript": 4447, "BitOr": 46, "TryExcept": 318, "Store": 18594, "Sub": 1020, "Break": 121, "Return": 2510, "GtE": 82, "Assert": 69, "Tuple": 3289, "Or": 358, "ExceptHandler": 328, "BitAnd": 36, "Pow": 27, "arguments": 4268, "TryFinally": 20, "GeneratorExp": 38, "Not": 916, "UAdd": 2, "Lambda": 170, "With": 174, "LShift": 15, "DictComp": 14, "ImportFrom": 2329, "And": 644, "AugAssign": 596, "RShift": 7, "Name": 83899, "BinOp": 3613, "Expr": 10719, "BoolOp": 1002, "List": 1356, "ClassDef": 907, "Yield": 108, "Set": 1, "While": 134, "Continue": 235, "Del": 96, "Str": 16609, "USub": 72, "Div": 467, "Assign": 14447, "FunctionDef": 4098, "Delete": 92, "Load": 95140, "Compare": 4425, "Gt": 329, "Mod": 474, "keyword": 3386, "NotEq": 264, "Attribute": 28048, "Is": 509, "Global": 61, "Lt": 292, "Module": 433, "alias": 3650, "Num": 10960, "Mult": 728, "LtE": 148, "In": 534, "Dict": 553, "IfExp": 183, "Eq": 1660, "ListComp": 246, "FloorDiv": 12, "If": 5554}
scikit-learn
{"Index": 9625, "Slice": 3641, "Raise": 1269, "For": 2600, "UnaryOp": 1142, "Exec": 2, "Invert": 60, "DictComp": 15, "Param": 11945, "BitXor": 2, "Lt": 540, "NotIn": 215, "Dict": 759, "comprehension": 810, "IsNot": 524, "Ellipsis": 15, "Print": 646, "Import": 1461, "Subscript": 11301, "BitOr": 37, "TryExcept": 348, "Store": 49022, "Sub": 2006, "Break": 111, "Return": 3197, "GtE": 178, "Assert": 209, "Tuple": 10571, "Or": 337, "ExceptHandler": 363, "FloorDiv": 157, "arguments": 6486, "TryFinally": 58, "GeneratorExp": 260, "Not": 719, "UAdd": 51, "Delete": 79, "With": 232, "Mult": 2970, "ImportFrom": 5153, "Set": 2, "And": 555, "AugAssign": 1192, "While": 57, "Name": 220289, "BinOp": 10854, "Expr": 20455, "BoolOp": 892, "List": 9891, "ClassDef": 603, "Yield": 261, "Pow": 559, "BitAnd": 23, "Continue": 109, "Del": 87, "Str": 23124, "USub": 312, "Div": 1580, "Assign": 34984, "FunctionDef": 6281, "Lambda": 205, "Load": 248100, "ExtSlice": 1898, "Compare": 6176, "Gt": 609, "Mod": 1635, "keyword": 23145, "In": 420, "NotEq": 509, "Attribute": 57102, "Is": 642, "Global": 11, "Add": 3063, "Module": 681, "alias": 7962, "Num": 50617, "LtE": 240, "Pass": 126, "Call": 61736, "IfExp": 208, "Eq": 2356, "ListComp": 513, "LShift": 14, "If": 5987}
veusz
{"Index": 3672, "Slice": 467, "Raise": 291, "For": 754, "UnaryOp": 648, "Exec": 1, "Invert": 4, "Param": 7470, "Add": 1209, "NotIn": 91, "Call": 17792, "comprehension": 224, "IsNot": 429, "Print": 4, "Import": 303, "Subscript": 4044, "BitOr": 65, "TryExcept": 355, "Store": 12458, "Sub": 804, "Break": 50, "Return": 2071, "GtE": 85, "Assert": 21, "Tuple": 3171, "Or": 246, "ExceptHandler": 366, "BitAnd": 35, "Pow": 65, "ImportFrom": 990, "GeneratorExp": 12, "Not": 511, "UAdd": 5, "Lambda": 114, "With": 47, "Mult": 822, "arguments": 3323, "And": 431, "BoolOp": 677, "Name": 67849, "BinOp": 3419, "Expr": 8554, "AugAssign": 407, "List": 945, "ClassDef": 615, "Yield": 16, "While": 121, "Continue": 49, "Del": 74, "Str": 13472, "USub": 128, "Div": 303, "Assign": 9416, "FunctionDef": 3209, "Delete": 74, "Load": 83213, "ExtSlice": 83, "Compare": 3065, "Gt": 211, "Mod": 503, "keyword": 2631, "In": 234, "NotEq": 294, "Attribute": 27206, "Is": 337, "Global": 13, "Lt": 195, "Module": 166, "alias": 1540, "Num": 8093, "LtE": 52, "Pass": 127, "Dict": 295, "IfExp": 52, "Eq": 1139, "ListComp": 212, "FloorDiv": 20, "If": 3409}
pip
{"Index": 3614, "Slice": 510, "Raise": 983, "For": 995, "UnaryOp": 1211, "Invert": 20, "DictComp": 5, "Param": 10033, "Pass": 267, "BitXor": 13, "Add": 1549, "NotIn": 361, "Dict": 904, "comprehension": 387, "IsNot": 453, "FloorDiv": 5, "Print": 70, "Import": 892, "Subscript": 4124, "BitOr": 154, "TryExcept": 642, "Store": 18424, "Sub": 245, "Assert": 1531, "Return": 4156, "GtE": 110, "Tuple": 11141, "Lt": 217, "Or": 522, "ExceptHandler": 699, "Pow": 20, "ImportFrom": 1487, "TryFinally": 62, "GeneratorExp": 152, "Not": 1163, "Delete": 113, "With": 306, "IfExp": 144, "Mult": 161, "arguments": 5517, "And": 753, "BoolOp": 1275, "RShift": 16, "Name": 96594, "BinOp": 3401, "Expr": 8163, "SetComp": 7, "AugAssign": 448, "List": 1762, "ClassDef": 785, "Yield": 232, "Set": 14, "BitAnd": 86, "Continue": 145, "Del": 118, "Str": 43235, "USub": 28, "Div": 461, "Assign": 14589, "FunctionDef": 5321, "Lambda": 196, "Load": 117978, "Compare": 5398, "Gt": 232, "keyword": 2564, "NotEq": 323, "Attribute": 32932, "Is": 588, "Exec": 4, "While": 186, "Module": 403, "alias": 3367, "Num": 78504, "Break": 176, "LtE": 142, "In": 1174, "Global": 10, "Call": 23246, "Mod": 1104, "Eq": 1865, "ListComp": 215, "LShift": 35, "If": 6204}
manila
{"Index": 18149, "LShift": 4, "Slice": 255, "Raise": 2107, "For": 1561, "UnaryOp": 1200, "Exec": 1, "Invert": 2, "Param": 26914, "BitXor": 1, "Add": 1465, "Dict": 10987, "DictComp": 64, "IsNot": 213, "AugAssign": 179, "Import": 1294, "Subscript": 18404, "BitOr": 23, "TryExcept": 949, "Store": 44597, "Sub": 170, "Assert": 9, "Return": 4814, "GtE": 97, "Tuple": 4457, "Print": 4, "comprehension": 683, "Or": 559, "ExceptHandler": 1011, "BitAnd": 4, "Pow": 9, "ImportFrom": 3496, "TryFinally": 21, "GeneratorExp": 113, "Not": 1188, "Lambda": 166, "With": 432, "IfExp": 287, "Mult": 287, "arguments": 13630, "And": 532, "NotIn": 316, "RShift": 2, "Name": 272068, "BinOp": 4356, "Expr": 33507, "SetComp": 7, "BoolOp": 1091, "List": 6244, "ClassDef": 1503, "Yield": 26, "Set": 106, "While": 55, "Continue": 105, "Del": 66, "Str": 92942, "USub": 10, "Div": 86, "Assign": 38971, "FunctionDef": 13464, "Delete": 66, "Load": 379567, "Compare": 4168, "Gt": 173, "keyword": 21285, "In": 705, "NotEq": 464, "Attribute": 149971, "Is": 410, "Global": 18, "Lt": 132, "Module": 789, "alias": 4819, "Num": 9397, "Break": 75, "LtE": 39, "Pass": 258, "Call": 77638, "Mod": 2483, "Eq": 1628, "ListComp": 479, "FloorDiv": 1, "If": 6229}
ipython
{"Index": 1237, "Slice": 223, "Raise": 287, "For": 487, "UnaryOp": 419, "Invert": 6, "DictComp": 9, "Param": 3769, "Pass": 178, "Add": 760, "Call": 12723, "comprehension": 181, "IsNot": 170, "Print": 275, "Import": 735, "Subscript": 1460, "BitOr": 22, "TryExcept": 401, "Store": 9394, "Sub": 77, "Assert": 155, "Return": 1433, "Eq": 420, "Exec": 14, "SetComp": 5, "Or": 133, "ExceptHandler": 421, "BitAnd": 11, "FloorDiv": 13, "ImportFrom": 1000, "TryFinally": 91, "Not": 406, "Set": 42, "With": 424, "IfExp": 52, "Mult": 62, "arguments": 2828, "And": 226, "NotIn": 95, "Name": 44681, "BinOp": 1367, "Delete": 63, "Expr": 6606, "Global": 11, "BoolOp": 359, "List": 1043, "ClassDef": 440, "Yield": 128, "Pow": 2, "While": 58, "Continue": 57, "Del": 67, "Str": 14676, "USub": 7, "Div": 11, "Assign": 7199, "FunctionDef": 2736, "Lambda": 92, "Load": 52125, "Compare": 1424, "Gt": 77, "NotEq": 86, "keyword": 1823, "AugAssign": 141, "Attribute": 16098, "Is": 204, "Tuple": 2073, "Lt": 43, "Module": 343, "alias": 2191, "Num": 2393, "Break": 49, "LtE": 24, "In": 269, "GtE": 40, "Dict": 334, "Mod": 550, "GeneratorExp": 37, "ListComp": 129, "If": 2064}
vpython-wx
{"Index": 2986, "Slice": 432, "Raise": 174, "For": 715, "UnaryOp": 901, "Exec": 3, "Invert": 5, "Param": 5043, "Pass": 181, "Add": 1853, "NotIn": 61, "Dict": 243, "comprehension": 85, "IsNot": 175, "Ellipsis": 4, "Print": 185, "Import": 397, "Subscript": 3367, "BitOr": 20, "TryExcept": 323, "Store": 13304, "Sub": 853, "Break": 110, "Return": 1651, "USub": 246, "Assert": 62, "Tuple": 3375, "Repr": 2, "Or": 229, "ExceptHandler": 338, "BitAnd": 24, "Pow": 54, "arguments": 2674, "TryFinally": 27, "GeneratorExp": 5, "Not": 621, "UAdd": 29, "Lambda": 74, "With": 1, "LShift": 31, "Mult": 1292, "ImportFrom": 420, "And": 391, "AugAssign": 241, "RShift": 3, "Name": 60361, "BinOp": 4989, "Expr": 6104, "BoolOp": 620, "List": 1190, "ClassDef": 307, "While": 203, "Continue": 90, "Del": 150, "Str": 9335, "Div": 671, "Assign": 10931, "FunctionDef": 2600, "Delete": 148, "Load": 71406, "ExtSlice": 54, "Compare": 2396, "Gt": 195, "keyword": 6521, "NotEq": 282, "Attribute": 21610, "Is": 193, "Global": 33, "Lt": 162, "Module": 206, "alias": 972, "Num": 12844, "IfExp": 7, "LtE": 71, "In": 269, "GtE": 88, "Call": 13765, "Mod": 404, "Eq": 921, "ListComp": 71, "FloorDiv": 25, "If": 3487}
Zope
{"Index": 1315, "Slice": 242, "Raise": 395, "For": 327, "UnaryOp": 382, "Param": 5341, "Pass": 185, "Print": 22, "Add": 463, "Dict": 402, "comprehension": 96, "IsNot": 305, "AugAssign": 35, "Import": 486, "Subscript": 1557, "BitOr": 23, "TryExcept": 303, "Store": 8684, "Sub": 92, "Assert": 62, "Return": 1703, "USub": 8, "Exec": 1, "Or": 129, "ExceptHandler": 316, "BitAnd": 33, "Pow": 2, "ImportFrom": 2018, "TryFinally": 43, "GeneratorExp": 14, "Not": 374, "Lambda": 27, "With": 44, "Mult": 29, "arguments": 3399, "And": 240, "NotIn": 94, "RShift": 1, "Name": 46716, "BinOp": 1011, "Expr": 6409, "Global": 37, "BoolOp": 369, "List": 757, "ClassDef": 712, "Yield": 7, "While": 63, "Continue": 41, "Del": 88, "Str": 10456, "Div": 3, "Assign": 7315, "FunctionDef": 3372, "Delete": 87, "Load": 51729, "Compare": 1703, "Gt": 60, "Mod": 392, "keyword": 1086, "NotEq": 60, "Attribute": 14949, "Is": 377, "Tuple": 1863, "Lt": 59, "Module": 321, "alias": 2666, "Num": 2333, "Break": 44, "LtE": 9, "In": 392, "GtE": 34, "Call": 13986, "IfExp": 6, "Eq": 318, "ListComp": 82, "LShift": 8, "If": 2238}
sabnzbd
{"Index": 2952, "Slice": 329, "Raise": 509, "For": 823, "UnaryOp": 1211, "Exec": 8, "Invert": 1, "DictComp": 1, "Param": 5758, "BitXor": 2, "Lt": 181, "NotIn": 251, "Call": 19504, "comprehension": 194, "IsNot": 169, "Print": 162, "Import": 829, "Subscript": 3281, "BitOr": 47, "TryExcept": 845, "Store": 16591, "Sub": 245, "Break": 189, "Return": 2684, "GtE": 87, "Assert": 43, "Tuple": 2406, "Or": 506, "ExceptHandler": 915, "BitAnd": 110, "FloorDiv": 3, "arguments": 3022, "TryFinally": 54, "GeneratorExp": 16, "Not": 1201, "Lambda": 88, "With": 32, "IfExp": 49, "Mult": 158, "ImportFrom": 465, "And": 930, "AugAssign": 458, "RShift": 14, "Name": 74113, "BinOp": 2355, "Expr": 7453, "BoolOp": 1436, "List": 772, "ClassDef": 377, "Yield": 75, "Pow": 6, "While": 152, "Continue": 135, "Del": 112, "Str": 19416, "USub": 9, "Div": 101, "Assign": 13215, "FunctionDef": 2934, "Delete": 106, "Load": 83728, "Compare": 3229, "Gt": 256, "keyword": 1379, "In": 607, "NotEq": 218, "Attribute": 25617, "Is": 337, "Global": 99, "Add": 1155, "Module": 129, "alias": 1738, "Num": 4928, "LtE": 41, "Pass": 278, "Dict": 500, "Mod": 958, "Eq": 1090, "ListComp": 176, "LShift": 14, "If": 6056}
tryton
{"Index": 1655, "Slice": 133, "Raise": 43, "For": 456, "UnaryOp": 695, "DictComp": 7, "Param": 4131, "Print": 4, "Add": 583, "Dict": 397, "comprehension": 153, "IsNot": 71, "AugAssign": 130, "Import": 397, "Subscript": 1788, "BitOr": 61, "TryExcept": 215, "Store": 7258, "Sub": 162, "Break": 67, "Return": 1506, "GtE": 51, "Assert": 308, "Tuple": 1451, "BitXor": 2, "Or": 245, "ExceptHandler": 218, "BitAnd": 21, "FloorDiv": 21, "arguments": 2007, "TryFinally": 7, "GeneratorExp": 54, "Not": 682, "Lambda": 112, "With": 27, "IfExp": 51, "Mult": 172, "ImportFrom": 427, "And": 403, "NotIn": 104, "Name": 42400, "BinOp": 1131, "Expr": 5195, "SetComp": 3, "BoolOp": 648, "List": 1174, "ClassDef": 238, "Yield": 61, "Set": 7, "While": 48, "Continue": 91, "Del": 37, "Str": 7601, "USub": 13, "Div": 73, "Pow": 10, "Assign": 5604, "FunctionDef": 1895, "Delete": 37, "Load": 55165, "Compare": 1706, "Gt": 56, "keyword": 1395, "In": 231, "NotEq": 119, "Attribute": 19778, "Is": 153, "Global": 6, "Lt": 98, "Module": 121, "alias": 1001, "Num": 2560, "LtE": 40, "Pass": 81, "Call": 12099, "Mod": 156, "Eq": 803, "ListComp": 85, "If": 2708}
numpy
{"Raise": 995, "Param": 12599, "IsNot": 580, "Exec": 12, "FloorDiv": 155, "TryFinally": 71, "Not": 1217, "Mult": 2836, "ImportFrom": 1565, "Load": 264588, "BoolOp": 1276, "Compare": 8347, "Yield": 288, "BitAnd": 85, "Div": 717, "Or": 466, "FunctionDef": 8511, "Gt": 473, "Global": 52, "Index": 10279, "Sub": 1216, "For": 2673, "UnaryOp": 1818, "Invert": 83, "DictComp": 9, "LShift": 14, "Import": 1029, "Print": 30, "Subscript": 12448, "BitOr": 60, "ExceptHandler": 624, "ClassDef": 1297, "Delete": 150, "NotEq": 714, "LtE": 170, "Pass": 312, "Eq": 3191, "Add": 4072, "comprehension": 957, "Ellipsis": 301, "TryExcept": 597, "Store": 40599, "GtE": 266, "Tuple": 12527, "Break": 148, "USub": 498, "SetComp": 4, "Del": 171, "Str": 38112, "Assign": 31521, "Lambda": 402, "And": 810, "ExtSlice": 708, "AugAssign": 768, "Set": 43, "keyword": 13037, "Attribute": 56125, "Num": 70418, "Dict": 1168, "Mod": 1748, "Slice": 2810, "Lt": 449, "Call": 67910, "Return": 4360, "Assert": 117, "arguments": 8913, "UAdd": 20, "With": 525, "NotIn": 331, "RShift": 8, "Name": 217841, "BinOp": 10576, "Expr": 24479, "List": 19016, "Continue": 205, "BitXor": 16, "Pow": 417, "Is": 1346, "While": 116, "Module": 390, "alias": 5054, "In": 859, "If": 7437, "GeneratorExp": 168, "ListComp": 769, "IfExp": 172}
gtg
{"Index": 682, "Slice": 53, "Raise": 56, "For": 313, "UnaryOp": 245, "Param": 3038, "Pass": 78, "Add": 301, "Dict": 316, "comprehension": 73, "IsNot": 72, "Print": 36, "Import": 159, "Subscript": 735, "BitOr": 1, "TryExcept": 156, "Store": 4730, "Sub": 72, "ExceptHandler": 160, "Return": 831, "GtE": 13, "Tuple": 602, "AugAssign": 47, "Or": 50, "Assert": 22, "BitAnd": 5, "ImportFrom": 420, "TryFinally": 2, "GeneratorExp": 7, "Not": 244, "Lambda": 73, "With": 66, "Mult": 36, "arguments": 1579, "And": 180, "NotIn": 73, "Name": 26178, "BinOp": 633, "Delete": 11, "Expr": 4275, "SetComp": 1, "BoolOp": 230, "List": 527, "ClassDef": 142, "Yield": 5, "Set": 1, "While": 33, "Continue": 30, "Del": 11, "Str": 5327, "USub": 1, "Div": 24, "Assign": 3958, "FunctionDef": 1506, "Break": 35, "Load": 33249, "Compare": 1032, "Gt": 91, "keyword": 506, "NotEq": 95, "Attribute": 12986, "Is": 92, "Global": 10, "Lt": 43, "Module": 139, "alias": 649, "Num": 1270, "LtE": 40, "In": 148, "Call": 8381, "Mod": 238, "Eq": 375, "ListComp": 65, "LShift": 3, "If": 1476}
tornado
{"Index": 926, "Slice": 114, "Raise": 411, "For": 280, "UnaryOp": 348, "Exec": 7, "Invert": 1, "Param": 4911, "Pass": 115, "BitXor": 4, "Lt": 67, "Dict": 509, "comprehension": 91, "IsNot": 324, "AugAssign": 142, "Import": 579, "Subscript": 1040, "BitOr": 40, "TryExcept": 301, "Store": 6616, "Sub": 92, "Assert": 115, "Return": 1257, "GtE": 43, "Tuple": 1168, "Print": 19, "Or": 144, "ExceptHandler": 318, "BitAnd": 35, "FloorDiv": 2, "arguments": 3496, "TryFinally": 79, "GeneratorExp": 49, "Not": 338, "Lambda": 130, "With": 306, "IfExp": 47, "Mult": 112, "ImportFrom": 726, "And": 171, "NotIn": 82, "RShift": 1, "Name": 41762, "BinOp": 950, "Delete": 38, "Expr": 6716, "BoolOp": 315, "List": 672, "ClassDef": 752, "Yield": 582, "Pow": 2, "While": 66, "Continue": 44, "Del": 38, "Str": 8650, "USub": 9, "Div": 53, "Assign": 5307, "FunctionDef": 3366, "Break": 50, "Load": 51534, "Compare": 1399, "Gt": 63, "keyword": 1821, "NotEq": 82, "Attribute": 18457, "Is": 197, "Global": 13, "Add": 457, "Module": 122, "alias": 1919, "Num": 2560, "LtE": 20, "In": 192, "Call": 13993, "Mod": 292, "Eq": 340, "ListComp": 42, "LShift": 2, "If": 1913}
pyramid
{"Index": 2366, "Slice": 75, "Raise": 216, "For": 190, "UnaryOp": 187, "DictComp": 1, "Param": 8514, "Add": 295, "NotIn": 40, "Call": 22141, "comprehension": 64, "IsNot": 187, "Print": 35, "Import": 583, "Subscript": 2441, "BitOr": 1, "TryExcept": 135, "Store": 14664, "Sub": 20, "ExceptHandler": 137, "Return": 2163, "USub": 2, "Tuple": 1984, "Or": 78, "Assert": 12, "BitAnd": 4, "ImportFrom": 3069, "TryFinally": 42, "GeneratorExp": 11, "Not": 185, "Lambda": 281, "With": 125, "IfExp": 13, "Mult": 21, "arguments": 6212, "And": 127, "BoolOp": 205, "RShift": 3, "Name": 72705, "BinOp": 610, "Expr": 9506, "Global": 3, "In": 336, "List": 1160, "ClassDef": 1244, "Yield": 9, "While": 14, "Continue": 20, "Del": 48, "Str": 17536, "Div": 1, "Assign": 13582, "FunctionDef": 5931, "Delete": 44, "Load": 80027, "Compare": 1307, "Gt": 51, "NotEq": 22, "keyword": 4776, "AugAssign": 37, "Attribute": 24963, "Is": 515, "Exec": 1, "Lt": 15, "Module": 462, "alias": 4102, "Num": 2553, "Break": 13, "Pass": 396, "GtE": 4, "Dict": 1519, "Mod": 300, "Eq": 137, "ListComp": 50, "LShift": 2, "If": 1352}
cherrypy
{"Index": 709, "Slice": 90, "Raise": 259, "For": 310, "UnaryOp": 243, "Param": 2464, "Add": 294, "NotIn": 61, "Dict": 361, "comprehension": 94, "IsNot": 60, "FloorDiv": 1, "Print": 32, "Import": 427, "Subscript": 799, "BitOr": 5, "TryExcept": 179, "Store": 4906, "Sub": 44, "ExceptHandler": 197, "Return": 941, "GtE": 26, "Tuple": 1050, "Or": 123, "Assert": 42, "BitAnd": 3, "Pow": 1, "arguments": 1653, "TryFinally": 54, "GeneratorExp": 3, "Not": 239, "Lambda": 23, "With": 21, "IfExp": 15, "Mult": 63, "ImportFrom": 278, "And": 112, "AugAssign": 84, "Name": 24910, "BinOp": 923, "Expr": 4366, "Global": 10, "BoolOp": 235, "List": 463, "ClassDef": 347, "Yield": 113, "While": 35, "Continue": 30, "Del": 43, "Str": 7716, "USub": 4, "Div": 15, "Assign": 3835, "FunctionDef": 1630, "Delete": 38, "Load": 30816, "Compare": 866, "Gt": 42, "keyword": 730, "In": 139, "NotEq": 80, "Attribute": 11007, "Is": 160, "Exec": 3, "Lt": 34, "Module": 109, "alias": 790, "Num": 1536, "Break": 40, "LtE": 11, "Pass": 73, "Call": 7684, "Mod": 580, "Eq": 256, "ListComp": 90, "LShift": 1, "If": 1509}
pathomx
{"Index": 1105, "Slice": 105, "Sub": 73, "For": 328, "UnaryOp": 81, "Invert": 8, "DictComp": 6, "Param": 1354, "Add": 139, "Call": 7099, "comprehension": 130, "IsNot": 74, "Print": 41, "Import": 391, "Subscript": 1166, "BitOr": 22, "TryExcept": 49, "Store": 4590, "Raise": 19, "Break": 17, "Return": 313, "GtE": 12, "Assert": 9, "Tuple": 649, "arguments": 794, "Or": 31, "ExceptHandler": 50, "BitAnd": 9, "Pow": 5, "ImportFrom": 359, "Not": 51, "UAdd": 1, "Delete": 13, "With": 23, "Mult": 62, "Mod": 118, "And": 63, "NotIn": 27, "Name": 21279, "BinOp": 452, "Expr": 3121, "In": 105, "List": 392, "ClassDef": 311, "Yield": 3, "Set": 1, "While": 8, "Continue": 13, "Del": 13, "Str": 5110, "USub": 21, "Div": 50, "Assign": 3433, "FunctionDef": 762, "Lambda": 32, "Load": 27570, "ExtSlice": 44, "Compare": 667, "Gt": 60, "NotEq": 46, "keyword": 583, "AugAssign": 28, "Attribute": 10041, "Is": 66, "Global": 4, "Lt": 46, "Module": 153, "alias": 866, "BoolOp": 94, "Num": 1740, "LtE": 10, "Pass": 86, "Dict": 347, "IfExp": 32, "Eq": 221, "ListComp": 119, "FloorDiv": 2, "If": 811}
Pillow
{"Index": 2031, "Global": 10, "Raise": 388, "For": 567, "UnaryOp": 301, "Invert": 7, "DictComp": 6, "Param": 3720, "Pass": 115, "BitXor": 3, "Add": 941, "Slice": 397, "Call": 14848, "comprehension": 123, "IsNot": 67, "Print": 21, "Import": 323, "Subscript": 2422, "BitOr": 40, "TryExcept": 301, "Store": 9568, "Sub": 327, "Break": 87, "While": 70, "Gt": 107, "Return": 964, "GtE": 38, "Assert": 24, "Tuple": 5152, "AugAssign": 93, "Or": 136, "ExceptHandler": 310, "FloorDiv": 109, "ImportFrom": 687, "TryFinally": 23, "GeneratorExp": 46, "Not": 272, "UAdd": 2, "Lambda": 42, "With": 168, "IfExp": 49, "Mult": 465, "arguments": 2492, "Load": 58810, "NotIn": 97, "RShift": 29, "Name": 46848, "BinOp": 2394, "Expr": 6350, "SetComp": 2, "BoolOp": 331, "List": 779, "ClassDef": 381, "Yield": 7, "Pow": 34, "BitAnd": 75, "Continue": 29, "Del": 25, "Str": 11287, "USub": 20, "Div": 112, "Assign": 7403, "FunctionDef": 2450, "Delete": 22, "And": 195, "ExtSlice": 3, "Compare": 1734, "Set": 3, "keyword": 786, "NotEq": 168, "Attribute": 16922, "Is": 124, "Exec": 3, "Lt": 79, "Module": 279, "alias": 1547, "Num": 16949, "LtE": 77, "In": 185, "Dict": 207, "Mod": 309, "Eq": 822, "ListComp": 65, "LShift": 43, "If": 2102}
scikit-image
{"Index": 5133, "Slice": 2690, "Sub": 1001, "For": 669, "UnaryOp": 539, "Exec": 1, "Invert": 26, "DictComp": 3, "Param": 4262, "Lt": 382, "Call": 20847, "comprehension": 319, "IsNot": 112, "Ellipsis": 165, "Print": 76, "Import": 687, "Subscript": 6154, "BitOr": 18, "TryExcept": 165, "Store": 17747, "Raise": 400, "Break": 46, "Return": 1376, "GtE": 112, "Assert": 779, "Tuple": 5802, "Or": 121, "ExceptHandler": 166, "BitAnd": 71, "Pow": 455, "arguments": 3046, "TryFinally": 5, "GeneratorExp": 83, "Not": 340, "UAdd": 10, "Delete": 28, "With": 446, "LShift": 4, "Mult": 1532, "ImportFrom": 1610, "And": 254, "NotIn": 82, "RShift": 6, "Name": 76401, "BinOp": 5405, "Expr": 6933, "BoolOp": 375, "List": 5525, "ClassDef": 157, "Yield": 27, "While": 27, "Continue": 48, "Del": 33, "Str": 8976, "USub": 163, "Div": 656, "Assign": 13459, "FunctionDef": 3012, "Lambda": 34, "Load": 92863, "ExtSlice": 1485, "Compare": 3090, "Gt": 358, "NotEq": 227, "keyword": 6060, "In": 214, "AugAssign": 428, "Attribute": 21023, "Is": 278, "Global": 6, "Add": 1594, "Module": 461, "alias": 3283, "Num": 49523, "IfExp": 83, "LtE": 154, "Pass": 53, "Dict": 211, "Mod": 286, "Eq": 1218, "ListComp": 232, "FloorDiv": 210, "If": 2139}
globaleaks
{"Index": 1737, "Slice": 35, "Raise": 161, "For": 398, "UnaryOp": 186, "DictComp": 12, "Param": 2425, "Pass": 24, "Add": 327, "NotIn": 44, "Dict": 515, "comprehension": 96, "IsNot": 82, "Print": 8, "Import": 174, "Subscript": 1772, "BitOr": 16, "TryExcept": 66, "Store": 6327, "Sub": 62, "Break": 13, "Return": 768, "GtE": 21, "Tuple": 500, "Or": 62, "ExceptHandler": 68, "BitAnd": 2, "FloorDiv": 2, "arguments": 1435, "TryFinally": 10, "GeneratorExp": 10, "Not": 185, "UAdd": 1, "Delete": 9, "With": 42, "IfExp": 46, "Mult": 95, "ImportFrom": 1099, "And": 93, "AugAssign": 101, "Name": 28348, "BinOp": 609, "Expr": 2649, "SetComp": 3, "BoolOp": 155, "List": 394, "ClassDef": 442, "Yield": 599, "Set": 10, "While": 11, "Continue": 38, "Del": 9, "Str": 6905, "Div": 20, "Pow": 2, "Assign": 5245, "FunctionDef": 1422, "Lambda": 13, "Load": 32925, "Compare": 904, "Gt": 57, "keyword": 1260, "NotEq": 60, "Attribute": 10672, "Is": 80, "Global": 2, "Lt": 38, "Module": 189, "alias": 1690, "Num": 2005, "LtE": 15, "In": 93, "Call": 7738, "Mod": 174, "Eq": 416, "ListComp": 68, "LShift": 10, "If": 851}
magnum
{"Index": 1572, "Slice": 38, "Raise": 213, "For": 225, "UnaryOp": 116, "Param": 4627, "Print": 7, "Add": 132, "Dict": 887, "DictComp": 10, "IsNot": 23, "FloorDiv": 2, "AugAssign": 26, "Import": 438, "Subscript": 1610, "BitOr": 1, "TryExcept": 145, "Store": 8072, "Sub": 15, "Assert": 6, "While": 3, "Return": 974, "GtE": 9, "Tuple": 440, "comprehension": 91, "Or": 56, "ExceptHandler": 156, "Pow": 17, "ImportFrom": 1284, "TryFinally": 5, "GeneratorExp": 7, "Not": 115, "Lambda": 17, "With": 143, "IfExp": 11, "Mult": 30, "arguments": 2713, "And": 51, "NotIn": 47, "RShift": 1, "Name": 41197, "BinOp": 533, "Expr": 5191, "BoolOp": 107, "List": 881, "ClassDef": 482, "Yield": 14, "Set": 5, "BitAnd": 1, "Continue": 21, "Del": 76, "Str": 13257, "USub": 1, "Div": 7, "Assign": 7072, "FunctionDef": 2696, "Delete": 75, "Load": 52745, "Compare": 436, "Gt": 23, "keyword": 3787, "In": 56, "NotEq": 43, "Attribute": 21392, "Is": 68, "Global": 9, "Lt": 20, "Module": 424, "alias": 1723, "Num": 2093, "Break": 4, "LtE": 20, "Pass": 57, "Call": 12370, "Mod": 352, "Eq": 132, "ListComp": 73, "LShift": 1, "If": 646}
networkx
{"Index": 7092, "Slice": 308, "Raise": 788, "For": 2023, "UnaryOp": 488, "Param": 7013, "Pass": 74, "BitXor": 12, "Lt": 327, "Dict": 2266, "comprehension": 1442, "IsNot": 289, "Print": 170, "Import": 1009, "Subscript": 7326, "BitOr": 48, "TryExcept": 483, "Store": 23802, "Sub": 732, "Assert": 87, "Break": 93, "Return": 1922, "USub": 52, "Tuple": 8829, "arguments": 4720, "Or": 181, "ExceptHandler": 492, "FloorDiv": 61, "ImportFrom": 1496, "TryFinally": 7, "GeneratorExp": 743, "Not": 434, "UAdd": 2, "Lambda": 66, "With": 28, "DictComp": 131, "Mod": 399, "And": 347, "NotIn": 316, "While": 284, "Name": 109337, "BinOp": 3464, "Expr": 13048, "SetComp": 81, "BoolOp": 528, "List": 4921, "ClassDef": 467, "Yield": 310, "Set": 470, "BitAnd": 70, "Continue": 118, "Del": 93, "Str": 14708, "Div": 500, "Pow": 67, "Assign": 15759, "FunctionDef": 4654, "Delete": 93, "Load": 125531, "ExtSlice": 66, "Compare": 3484, "Gt": 210, "NotEq": 234, "keyword": 4816, "AugAssign": 465, "Attribute": 26026, "Is": 492, "Global": 71, "RShift": 10, "Add": 1358, "Module": 500, "alias": 2827, "Num": 35106, "Mult": 651, "LtE": 127, "In": 507, "GtE": 110, "Call": 34606, "IfExp": 119, "Eq": 894, "ListComp": 388, "LShift": 21, "If": 3206}
tg2
{"Index": 1076, "Slice": 43, "Raise": 139, "For": 88, "UnaryOp": 155, "Param": 3029, "Pass": 108, "Lt": 14, "Call": 6495, "comprehension": 52, "IsNot": 67, "AugAssign": 33, "Import": 183, "Subscript": 1119, "BitOr": 1, "TryExcept": 199, "Store": 4728, "Sub": 16, "ExceptHandler": 206, "Return": 1039, "GtE": 5, "Exec": 2, "Or": 60, "Assert": 1368, "BitAnd": 1, "FloorDiv": 3, "ImportFrom": 653, "TryFinally": 24, "GeneratorExp": 22, "Not": 152, "Delete": 18, "With": 42, "IfExp": 3, "Mult": 11, "arguments": 2272, "And": 82, "NotIn": 79, "Name": 23717, "BinOp": 272, "Expr": 1622, "BoolOp": 142, "List": 339, "ClassDef": 526, "Yield": 18, "While": 12, "Global": 5, "Del": 18, "Str": 6963, "USub": 3, "Assign": 4327, "FunctionDef": 2243, "Break": 8, "Load": 24905, "Compare": 1650, "Gt": 15, "keyword": 1370, "NotEq": 20, "Attribute": 7142, "Is": 134, "Tuple": 363, "Add": 119, "Module": 138, "alias": 1184, "Lambda": 29, "Num": 903, "Continue": 4, "LtE": 3, "In": 781, "Dict": 721, "Mod": 154, "Eq": 537, "ListComp": 30, "If": 685}
Pyro4
{"Index": 647, "Slice": 41, "Raise": 297, "For": 260, "UnaryOp": 169, "Exec": 1, "Invert": 1, "DictComp": 12, "Param": 2729, "Pass": 216, "BitXor": 1, "Lt": 144, "NotIn": 29, "Dict": 240, "comprehension": 71, "IsNot": 45, "Print": 116, "Import": 694, "Subscript": 688, "Continue": 11, "TryExcept": 316, "Store": 5748, "Sub": 86, "Break": 28, "BitOr": 21, "Return": 767, "GtE": 32, "Assert": 55, "Tuple": 862, "arguments": 1713, "Or": 91, "ExceptHandler": 331, "BitAnd": 26, "FloorDiv": 30, "ImportFrom": 339, "TryFinally": 52, "Not": 168, "Delete": 47, "With": 393, "Mult": 138, "Mod": 344, "And": 97, "AugAssign": 78, "Name": 30239, "BinOp": 1078, "Expr": 5076, "SetComp": 9, "BoolOp": 188, "List": 352, "ClassDef": 340, "Yield": 18, "While": 67, "Set": 96, "Del": 49, "Str": 5991, "Div": 68, "Assign": 4226, "FunctionDef": 1671, "Lambda": 42, "Load": 38093, "Compare": 884, "Gt": 42, "keyword": 976, "In": 160, "NotEq": 69, "GeneratorExp": 14, "Is": 95, "Global": 6, "Add": 435, "Module": 211, "alias": 1105, "Num": 2683, "LtE": 7, "Attribute": 14478, "Call": 10250, "IfExp": 40, "Eq": 279, "ListComp": 35, "LShift": 7, "If": 1138}
python-api
{"Index": 3122, "Slice": 94, "Raise": 254, "For": 486, "UnaryOp": 162, "DictComp": 11, "Param": 2182, "Pass": 60, "Add": 600, "NotIn": 92, "Call": 7593, "comprehension": 177, "IsNot": 71, "Print": 28, "Import": 190, "Subscript": 3196, "TryExcept": 120, "Store": 6082, "Sub": 253, "ExceptHandler": 122, "Return": 609, "GtE": 23, "Assert": 79, "Exec": 1, "Or": 53, "Break": 12, "FloorDiv": 5, "ImportFrom": 578, "TryFinally": 1, "GeneratorExp": 39, "Not": 152, "Lambda": 7, "With": 59, "SetComp": 2, "Mult": 269, "arguments": 1192, "And": 150, "AugAssign": 172, "Name": 29316, "BinOp": 1101, "Expr": 2427, "Global": 1, "BoolOp": 203, "List": 2442, "ClassDef": 197, "Yield": 8, "Set": 3, "While": 10, "Continue": 18, "Del": 25, "Str": 12249, "USub": 10, "Div": 122, "Pow": 3, "Assign": 4425, "FunctionDef": 1185, "Delete": 25, "Load": 33818, "ExtSlice": 15, "Compare": 1017, "Gt": 44, "Mod": 21, "keyword": 5842, "NotEq": 69, "Attribute": 6359, "Is": 98, "Tuple": 794, "Lt": 43, "Module": 185, "alias": 1031, "Num": 8292, "LtE": 26, "In": 197, "Dict": 1074, "IfExp": 54, "Eq": 364, "ListComp": 122, "If": 1302}
sage
{"Index": 43301, "Slice": 2910, "Raise": 9993, "For": 12209, "UnaryOp": 10104, "Exec": 11, "Invert": 306, "DictComp": 556, "Param": 68320, "Pass": 1401, "BitXor": 61, "Add": 28810, "Call": 219970, "comprehension": 13664, "LShift": 137, "Print": 225, "Import": 1959, "Subscript": 46173, "BitOr": 69, "TryExcept": 3514, "Store": 148373, "Sub": 12823, "ExceptHandler": 3670, "Return": 44461, "GtE": 1119, "Tuple": 31560, "Eq": 17024, "Or": 2609, "Assert": 1101, "FloorDiv": 1118, "ImportFrom": 19295, "TryFinally": 49, "Not": 7427, "UAdd": 70, "Delete": 282, "With": 167, "Mult": 19854, "arguments": 36402, "Set": 37, "And": 5387, "NotIn": 1444, "RShift": 64, "Name": 778935, "BinOp": 74198, "Expr": 60556, "SetComp": 5, "BoolOp": 7996, "List": 23587, "ClassDef": 4531, "Yield": 1158, "Pow": 5269, "While": 1656, "Continue": 627, "Del": 308, "Str": 100112, "USub": 2301, "Div": 4256, "Assign": 100168, "FunctionDef": 35034, "Lambda": 1368, "Load": 835563, "ExtSlice": 38, "Compare": 42749, "Gt": 3021, "NotEq": 4591, "Mod": 7810, "keyword": 20553, "Lt": 2878, "AugAssign": 6198, "Attribute": 172309, "Is": 5574, "Global": 127, "BitAnd": 125, "Module": 2159, "alias": 26028, "Num": 142302, "Break": 933, "LtE": 1217, "In": 3844, "Dict": 3034, "IsNot": 2267, "IfExp": 1005, "GeneratorExp": 3428, "ListComp": 9138, "If": 47525}
wxPython
{"Index": 13161, "Slice": 1832, "Raise": 1893, "For": 4696, "UnaryOp": 5790, "Exec": 34, "Invert": 165, "Param": 69116, "Pass": 1163, "BitXor": 47, "Add": 13338, "NotIn": 426, "Call": 225243, "comprehension": 603, "IsNot": 1102, "Print": 1059, "Import": 5206, "Subscript": 14942, "BitOr": 4209, "TryExcept": 1537, "Store": 147021, "Sub": 5877, "Break": 655, "Return": 54457, "GtE": 878, "Assert": 463, "Tuple": 24065, "Repr": 26, "Or": 2389, "ExceptHandler": 1579, "BitAnd": 1997, "FloorDiv": 17, "arguments": 74864, "TryFinally": 190, "GeneratorExp": 20, "Not": 5378, "UAdd": 5, "Lambda": 7323, "With": 41, "IfExp": 11, "Mult": 2444, "ImportFrom": 1324, "And": 4289, "AugAssign": 3445, "RShift": 39, "Name": 829706, "BinOp": 31501, "Expr": 129465, "BoolOp": 6678, "List": 8177, "ClassDef": 6378, "Yield": 315, "Pow": 123, "While": 571, "Continue": 457, "Del": 604, "Str": 152412, "USub": 242, "Div": 2583, "Assign": 128571, "FunctionDef": 67541, "Delete": 591, "Load": 1020405, "ExtSlice": 37, "Compare": 21702, "Gt": 1671, "keyword": 17123, "NotEq": 2518, "Attribute": 360256, "Is": 1167, "Global": 143, "Lt": 1562, "Module": 1514, "alias": 7781, "Num": 65689, "LtE": 414, "In": 1684, "Dict": 1133, "Mod": 3924, "Eq": 10329, "ListComp": 581, "LShift": 348, "If": 33110}
VisTrails
{"Index": 38167, "Slice": 887, "Sub": 745, "For": 10461, "UnaryOp": 4674, "Exec": 15, "Invert": 14, "Param": 79915, "Pass": 1227, "BitXor": 14, "Lt": 318, "NotIn": 1385, "Dict": 6697, "comprehension": 1793, "IsNot": 9905, "Print": 1277, "Import": 2029, "Subscript": 38917, "BitOr": 143, "TryExcept": 1221, "Store": 144784, "Raise": 1302, "Break": 997, "Return": 21851, "GtE": 134, "Assert": 273, "Tuple": 20065, "Or": 1463, "ExceptHandler": 1306, "BitAnd": 145, "FloorDiv": 38, "ImportFrom": 4177, "TryFinally": 91, "GeneratorExp": 637, "Not": 4556, "UAdd": 2, "Lambda": 232, "With": 156, "IfExp": 152, "Mult": 628, "arguments": 38350, "And": 9397, "AugAssign": 1316, "RShift": 7, "Name": 700542, "BinOp": 7836, "Expr": 51584, "BoolOp": 10860, "List": 11169, "ClassDef": 3930, "Yield": 35, "Pow": 22, "While": 263, "Continue": 313, "Del": 1310, "Str": 139023, "USub": 102, "Div": 337, "Assign": 125892, "FunctionDef": 38118, "Delete": 1310, "Load": 825092, "ExtSlice": 90, "Compare": 32594, "Gt": 663, "keyword": 12666, "NotEq": 1998, "Attribute": 280408, "Is": 3622, "Global": 170, "Add": 4271, "Module": 999, "alias": 7936, "Num": 25781, "LtE": 147, "In": 4908, "Call": 151432, "Mod": 2796, "Eq": 9527, "ListComp": 1139, "LShift": 6, "If": 45615}
calibre
{"Index": 21357, "LShift": 122, "Slice": 2830, "Raise": 2193, "For": 8258, "UnaryOp": 5352, "Exec": 22, "Invert": 28, "Param": 46794, "Pass": 1266, "BitXor": 40, "Add": 10688, "Call": 157767, "comprehension": 2895, "IsNot": 2979, "Print": 499, "Import": 1926, "Subscript": 24187, "BitOr": 904, "NotEq": 1796, "Store": 116616, "Sub": 1969, "Assert": 209, "Gt": 1592, "Return": 16486, "GtE": 425, "Tuple": 37344, "Or": 2710, "ExceptHandler": 3666, "BitAnd": 400, "FloorDiv": 120, "arguments": 23117, "TryFinally": 222, "TryExcept": 3562, "Not": 5217, "UAdd": 5, "Delete": 374, "With": 1480, "IfExp": 2289, "DictComp": 555, "ImportFrom": 9217, "And": 3932, "NotIn": 1130, "RShift": 74, "Name": 556306, "BinOp": 19392, "Expr": 51835, "SetComp": 237, "BoolOp": 6642, "List": 9435, "ClassDef": 3223, "Yield": 484, "Pow": 42, "While": 701, "Continue": 1188, "Del": 395, "Str": 473843, "GeneratorExp": 513, "USub": 102, "Div": 600, "Assign": 85550, "FunctionDef": 22044, "Lambda": 1073, "Load": 661240, "Compare": 23072, "Set": 707, "keyword": 15248, "AugAssign": 2989, "Attribute": 197773, "Is": 2776, "Global": 146, "Lt": 1043, "Module": 1370, "alias": 20842, "Num": 42328, "Mult": 1390, "LtE": 351, "In": 3302, "Dict": 3954, "Mod": 6032, "Eq": 7756, "ListComp": 1553, "Break": 953, "If": 32975}
gramps
{"Index": 10538, "Slice": 654, "Raise": 884, "For": 3475, "UnaryOp": 2361, "Exec": 8, "DictComp": 1, "Param": 29446, "Pass": 540, "BitXor": 42, "Lt": 750, "NotIn": 352, "Call": 90377, "comprehension": 731, "IsNot": 618, "Print": 498, "Import": 1017, "Subscript": 11192, "BitOr": 90, "TryExcept": 941, "Store": 60307, "Sub": 1846, "Break": 278, "Return": 9215, "GtE": 191, "Assert": 154, "Tuple": 8911, "Or": 836, "ExceptHandler": 1019, "BitAnd": 84, "FloorDiv": 100, "arguments": 14025, "TryFinally": 6, "GeneratorExp": 105, "Not": 2265, "UAdd": 8, "Delete": 92, "With": 503, "IfExp": 280, "Mult": 1101, "ImportFrom": 6192, "And": 2025, "BoolOp": 2861, "RShift": 9, "Name": 309965, "BinOp": 12545, "Expr": 43845, "AugAssign": 2162, "List": 5418, "ClassDef": 1689, "Yield": 68, "Pow": 40, "While": 269, "Continue": 353, "Del": 92, "Str": 67111, "USub": 88, "Div": 574, "Assign": 48165, "FunctionDef": 13838, "Lambda": 187, "Load": 383000, "Compare": 11619, "Gt": 1003, "keyword": 6686, "NotEq": 918, "Attribute": 137359, "Is": 727, "Global": 41, "Add": 6500, "Module": 1146, "alias": 9744, "Num": 29614, "LtE": 197, "In": 1092, "Dict": 2036, "Mod": 4313, "Eq": 5874, "ListComp": 623, "LShift": 8, "If": 17881}
EventGhost
{"Index": 7802, "LShift": 127, "Slice": 717, "Raise": 1030, "For": 1514, "UnaryOp": 1710, "Exec": 11, "Invert": 14, "DictComp": 2, "Param": 18632, "BitXor": 19, "Add": 3874, "NotIn": 197, "Dict": 1081, "comprehension": 468, "IsNot": 679, "Print": 422, "Import": 1509, "Subscript": 8519, "BitOr": 1430, "TryExcept": 1097, "Store": 47060, "Sub": 909, "Break": 338, "Return": 4638, "GtE": 180, "Assert": 109, "Tuple": 12548, "Or": 583, "ExceptHandler": 1180, "BitAnd": 390, "Pow": 59, "ImportFrom": 1789, "TryFinally": 153, "GeneratorExp": 95, "Not": 1645, "UAdd": 3, "Lambda": 177, "With": 341, "IfExp": 401, "Mult": 801, "arguments": 9598, "And": 867, "AugAssign": 991, "RShift": 40, "Name": 221753, "BinOp": 8389, "Expr": 28087, "Pass": 542, "List": 2421, "ClassDef": 4226, "Yield": 508, "While": 701, "Continue": 241, "Del": 215, "Str": 49483, "USub": 48, "Div": 389, "Assign": 41240, "FunctionDef": 9421, "Delete": 215, "Load": 273230, "Compare": 7296, "Gt": 664, "keyword": 6842, "NotEq": 875, "Attribute": 93896, "Is": 650, "Global": 38, "Lt": 509, "Module": 557, "alias": 5674, "BoolOp": 1450, "Num": 120282, "LtE": 130, "In": 634, "Call": 58945, "Mod": 1333, "Eq": 2828, "ListComp": 370, "FloorDiv": 9, "If": 10090}
sympy
{"Index": 24141, "LShift": 46, "Slice": 2053, "Raise": 3102, "For": 5933, "UnaryOp": 31014, "Invert": 731, "DictComp": 76, "Param": 228082, "Pass": 530, "BitXor": 148, "Add": 166810, "NotIn": 567, "Call": 619348, "comprehension": 5226, "IsNot": 1206, "Print": 259, "Import": 530, "Subscript": 25830, "BitOr": 1641, "TryExcept": 937, "Store": 126717, "Sub": 33067, "Assert": 47826, "Return": 24770, "USub": 25151, "Tuple": 42415, "SetComp": 47, "Or": 1708, "ExceptHandler": 963, "BitAnd": 2650, "Pow": 103840, "arguments": 99474, "TryFinally": 32, "GeneratorExp": 1356, "Not": 5041, "UAdd": 91, "Delete": 163, "With": 257, "IfExp": 482, "Mult": 266629, "ImportFrom": 9846, "And": 3534, "AugAssign": 2669, "RShift": 120, "Name": 1837586, "BinOp": 632445, "Expr": 25876, "Global": 51, "BoolOp": 5242, "List": 30202, "ClassDef": 1468, "Yield": 292, "Set": 438, "While": 642, "Continue": 646, "Del": 183, "Str": 94172, "Div": 56446, "Assign": 85677, "FunctionDef": 24328, "Lambda": 75146, "Load": 1691318, "ExtSlice": 348, "Compare": 62833, "Gt": 1945, "keyword": 14936, "NotEq": 2296, "Attribute": 110267, "Is": 8064, "Exec": 6, "Lt": 2564, "Module": 1186, "alias": 33065, "Num": 408583, "Break": 558, "LtE": 1061, "In": 1945, "GtE": 727, "Dict": 3505, "Mod": 3249, "Eq": 43242, "ListComp": 3645, "FloorDiv": 468, "If": 24779}
twisted
{"Index": 8199, "Slice": 1270, "Raise": 1760, "For": 1977, "UnaryOp": 1509, "Invert": 12, "DictComp": 7, "Param": 40622, "BitXor": 9, "Add": 4334, "Dict": 1962, "comprehension": 625, "IsNot": 846, "Print": 33, "Import": 1195, "Subscript": 9469, "Continue": 108, "TryExcept": 1365, "Store": 54614, "Sub": 468, "Assert": 266, "BitOr": 249, "Return": 9952, "GtE": 128, "Exec": 22, "arguments": 26951, "AugAssign": 634, "Or": 520, "ExceptHandler": 1445, "BitAnd": 156, "FloorDiv": 61, "ImportFrom": 6201, "TryFinally": 110, "GeneratorExp": 90, "Not": 1446, "UAdd": 2, "Delete": 463, "With": 423, "Mult": 646, "Mod": 2209, "Set": 2, "And": 721, "NotIn": 261, "RShift": 24, "Name": 307588, "BinOp": 7768, "Expr": 60942, "SetComp": 2, "BoolOp": 1241, "List": 8453, "ClassDef": 5411, "Yield": 228, "Pow": 106, "While": 222, "Global": 63, "Del": 495, "Str": 70234, "USub": 49, "Div": 94, "Assign": 45042, "FunctionDef": 25749, "Lambda": 1202, "Load": 376884, "Compare": 6087, "Gt": 291, "keyword": 6125, "In": 680, "NotEq": 490, "Attribute": 137783, "Is": 1077, "Tuple": 9322, "Lt": 229, "Module": 1114, "alias": 10993, "Num": 22103, "Break": 123, "LtE": 96, "Pass": 886, "Call": 98069, "IfExp": 37, "Eq": 2023, "ListComp": 518, "LShift": 46, "If": 9084}
python-novaclient
{"Index": 884, "Slice": 18, "Raise": 143, "For": 225, "UnaryOp": 110, "Param": 3318, "Print": 7, "Lt": 24, "Dict": 1680, "comprehension": 48, "IsNot": 70, "AugAssign": 28, "Import": 160, "Subscript": 902, "BitOr": 3, "TryExcept": 89, "Store": 4235, "Sub": 13, "Break": 11, "Return": 794, "GtE": 29, "Assert": 59, "Tuple": 662, "Or": 50, "ExceptHandler": 93, "ImportFrom": 454, "TryFinally": 4, "GeneratorExp": 16, "Not": 110, "Delete": 3, "With": 34, "IfExp": 25, "DictComp": 2, "arguments": 2097, "And": 82, "NotIn": 34, "While": 9, "Name": 26846, "BinOp": 785, "Expr": 4274, "BoolOp": 132, "List": 611, "ClassDef": 316, "Yield": 15, "Set": 1, "BitAnd": 2, "Continue": 15, "Del": 3, "Str": 14095, "Assign": 3553, "FunctionDef": 2074, "Lambda": 23, "Load": 34026, "Compare": 528, "Gt": 24, "keyword": 3138, "In": 112, "NotEq": 23, "Attribute": 12561, "Is": 39, "Add": 88, "Module": 157, "alias": 614, "Num": 2184, "Mult": 38, "LtE": 12, "Pass": 62, "Call": 8914, "Mod": 669, "Eq": 162, "ListComp": 30, "If": 808}
python-cinderclient
{"Index": 838, "Slice": 18, "Raise": 122, "For": 200, "UnaryOp": 121, "DictComp": 1, "Param": 4025, "Print": 1, "Lt": 11, "Dict": 1919, "comprehension": 69, "IsNot": 91, "AugAssign": 58, "Import": 184, "Subscript": 856, "BitOr": 19, "TryExcept": 93, "Store": 4548, "Sub": 12, "Break": 13, "Return": 1059, "GtE": 13, "Assert": 76, "Tuple": 734, "Or": 84, "ExceptHandler": 104, "ImportFrom": 492, "TryFinally": 3, "GeneratorExp": 16, "Not": 121, "Delete": 4, "With": 23, "IfExp": 52, "Mult": 8, "arguments": 2300, "And": 76, "NotIn": 15, "Name": 27983, "BinOp": 623, "Expr": 4034, "SetComp": 1, "BoolOp": 160, "List": 617, "ClassDef": 309, "Yield": 8, "Set": 1, "While": 10, "Continue": 16, "Del": 4, "Str": 14410, "Assign": 3839, "FunctionDef": 2292, "Lambda": 8, "Load": 32887, "Compare": 537, "Gt": 26, "keyword": 3537, "In": 92, "NotEq": 19, "Attribute": 11274, "Is": 46, "Add": 112, "Module": 176, "alias": 676, "Num": 1408, "LtE": 14, "Pass": 46, "Call": 7867, "Mod": 530, "Eq": 214, "ListComp": 51, "If": 784}
matplotlib
{"Raise": 1108, "Param": 17544, "IsNot": 1005, "Exec": 1, "FloorDiv": 100, "TryFinally": 105, "Not": 1165, "Mult": 4007, "ImportFrom": 2178, "Load": 257711, "BoolOp": 1404, "Compare": 8004, "Yield": 87, "BitAnd": 90, "Div": 1774, "Or": 522, "FunctionDef": 8848, "Gt": 462, "Global": 25, "Index": 8606, "Sub": 2271, "For": 1738, "UnaryOp": 1735, "Invert": 40, "DictComp": 42, "LShift": 70, "Import": 2809, "Print": 42, "Subscript": 9697, "BitOr": 150, "ExceptHandler": 615, "ClassDef": 1142, "Delete": 86, "NotEq": 610, "LtE": 245, "Pass": 322, "Eq": 2786, "Add": 4261, "comprehension": 907, "Ellipsis": 76, "TryExcept": 594, "Store": 50647, "GtE": 210, "Tuple": 13939, "Break": 84, "USub": 517, "SetComp": 5, "Del": 97, "Str": 39508, "Assign": 35906, "Lambda": 187, "And": 882, "ExtSlice": 1120, "AugAssign": 911, "Set": 19, "keyword": 17515, "Attribute": 74579, "Num": 53757, "Call": 56356, "Mod": 1354, "Slice": 2426, "Lt": 504, "Dict": 1047, "Return": 5494, "Assert": 1087, "arguments": 9035, "UAdd": 13, "With": 503, "NotIn": 219, "RShift": 3, "Name": 218169, "BinOp": 13685, "Expr": 23607, "List": 9615, "Continue": 115, "BitXor": 1, "Pow": 515, "Is": 1302, "While": 70, "Module": 865, "alias": 6734, "In": 735, "If": 8873, "GeneratorExp": 135, "ListComp": 720, "IfExp": 124}
emesene
{"Index": 6739, "Slice": 304, "Raise": 445, "For": 1080, "UnaryOp": 1145, "Invert": 16, "Param": 17782, "BitXor": 8, "Add": 1442, "NotIn": 206, "Call": 32444, "comprehension": 103, "IsNot": 556, "Print": 266, "Import": 1775, "Subscript": 7043, "BitOr": 91, "TryExcept": 522, "Store": 23876, "Sub": 265, "Break": 53, "Return": 4265, "USub": 29, "Assert": 84, "Tuple": 2831, "Or": 349, "ExceptHandler": 575, "BitAnd": 99, "FloorDiv": 9, "ImportFrom": 2098, "TryFinally": 13, "GeneratorExp": 3, "Not": 1100, "Lambda": 208, "With": 78, "IfExp": 59, "Mult": 147, "arguments": 8448, "And": 562, "AugAssign": 506, "RShift": 9, "Name": 129066, "BinOp": 3187, "Expr": 20200, "BoolOp": 911, "List": 1344, "ClassDef": 1252, "Yield": 19, "Pow": 5, "While": 88, "Continue": 74, "Del": 256, "Str": 30441, "Div": 92, "Assign": 20635, "FunctionDef": 8240, "Delete": 252, "Load": 158590, "Compare": 4792, "Gt": 226, "keyword": 3181, "In": 662, "NotEq": 355, "Attribute": 60220, "Is": 740, "Global": 37, "Lt": 164, "Module": 845, "alias": 4399, "Num": 6108, "LtE": 25, "Pass": 433, "GtE": 71, "Dict": 905, "Mod": 1516, "Eq": 1788, "ListComp": 100, "LShift": 10, "If": 6403}
miro
{"Index": 4450, "Slice": 373, "Raise": 597, "For": 1663, "UnaryOp": 1357, "Exec": 2, "Invert": 1, "Param": 20091, "BitXor": 4, "Add": 1512, "NotIn": 207, "Dict": 1272, "comprehension": 594, "LShift": 30, "Print": 242, "Import": 1122, "Subscript": 4823, "BitOr": 75, "TryExcept": 975, "Store": 27426, "Sub": 686, "Break": 114, "Return": 5823, "GtE": 83, "Assert": 27, "Tuple": 4691, "AugAssign": 494, "Or": 404, "ExceptHandler": 1040, "BitAnd": 51, "FloorDiv": 38, "arguments": 11246, "TryFinally": 132, "GeneratorExp": 208, "Not": 1297, "ImportFrom": 2462, "UAdd": 2, "Delete": 186, "With": 134, "Mult": 355, "Mod": 1242, "And": 875, "BoolOp": 1279, "RShift": 5, "Name": 154918, "BinOp": 3841, "Expr": 23301, "Pass": 466, "List": 1963, "ClassDef": 1750, "Yield": 93, "Pow": 19, "While": 160, "Continue": 158, "Del": 186, "Str": 27970, "USub": 57, "Div": 318, "Assign": 22049, "FunctionDef": 11099, "Lambda": 147, "Load": 190124, "Compare": 5399, "Gt": 349, "keyword": 3001, "NotEq": 429, "Attribute": 71432, "Is": 733, "Global": 96, "Lt": 189, "Module": 428, "alias": 4165, "Num": 11126, "LtE": 73, "In": 643, "Call": 45004, "IsNot": 846, "IfExp": 27, "Eq": 1882, "ListComp": 386, "If": 8112}
mailman
{"Index": 1153, "Slice": 75, "Raise": 180, "For": 363, "UnaryOp": 175, "Param": 2936, "Add": 232, "Call": 9170, "comprehension": 60, "IsNot": 106, "Print": 108, "Import": 423, "Subscript": 1228, "BitOr": 11, "TryExcept": 213, "Store": 6714, "Sub": 29, "Assert": 63, "Return": 823, "GtE": 13, "Tuple": 480, "Or": 62, "ExceptHandler": 238, "BitAnd": 7, "FloorDiv": 3, "arguments": 1693, "TryFinally": 41, "GeneratorExp": 33, "Not": 175, "Delete": 89, "With": 123, "IfExp": 56, "Mult": 26, "ImportFrom": 1890, "And": 95, "NotIn": 37, "RShift": 1, "Name": 30999, "BinOp": 356, "Expr": 4430, "BoolOp": 157, "List": 574, "ClassDef": 501, "Continue": 75, "While": 31, "Global": 8, "Del": 90, "Yield": 70, "Str": 7145, "Div": 9, "Assign": 5568, "FunctionDef": 1691, "Break": 55, "Load": 35063, "Compare": 1086, "Gt": 64, "NotEq": 78, "keyword": 1240, "In": 145, "AugAssign": 46, "Attribute": 11522, "Is": 289, "Exec": 1, "Lt": 27, "Module": 342, "alias": 3145, "Lambda": 2, "Num": 1416, "LtE": 9, "Pass": 85, "Dict": 218, "Mod": 79, "Eq": 321, "ListComp": 27, "LShift": 5, "If": 1307}
